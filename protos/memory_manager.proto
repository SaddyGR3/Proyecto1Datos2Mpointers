syntax = "proto3";

package memorymanager;

service MemoryManager {
    rpc Create(CreateRequest) returns (CreateResponse);
    rpc Set(SetRequest) returns (SetResponse);
    rpc Get(GetRequest) returns (GetResponse);
    rpc IncreaseRefCount(RefCountRequest) returns (RefCountResponse);
    rpc DecreaseRefCount(RefCountRequest) returns (RefCountResponse);
}

// Tipos b치sicos soportados
enum DataType {
    INT = 0;     // int32 (4 bytes)
    FLOAT = 1;   // float (4 bytes)
    CHAR = 2;    // char (1 byte)
    STRING = 3;  // string (variable)
}

message CreateRequest {
    DataType type = 1;      // Tipo de dato a crear
    uint32 size = 2;        // Tama침o necesario (especialmente importante para strings)
}

message CreateResponse {
    int32 id = 1;           // ID del bloque creado
    DataType type = 2;      // Tipo confirmado del bloque
    uint32 actual_size = 3; // Tama침o real asignado
}

message SetRequest {
    int32 id = 1;           // ID del bloque
    DataType type = 2;      // Tipo de dato
    oneof value {
        bytes binary_data = 3;  // Para INT, FLOAT, CHAR
        string str_data = 4;    // Solo para STRING
    }
}

message SetResponse {
    bool success = 1;
    string error_message = 2;
    uint32 bytes_written = 3;
}

message GetRequest {
    int32 id = 1;           // ID del bloque
    DataType expected_type = 2; // Tipo esperado (para validaci칩n)
}

message GetResponse {
    DataType type = 1;      // Tipo real del dato
    oneof value {
        bytes binary_data = 2;  // Para INT, FLOAT, CHAR
        string str_data = 3;    // Solo para STRING
    }
}

message RefCountRequest {
    int32 id = 1;
}

message RefCountResponse {
    int32 ref_count = 1;
}