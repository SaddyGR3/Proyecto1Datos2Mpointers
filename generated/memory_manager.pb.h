// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: memory_manager.proto
// Protobuf C++ Version: 5.29.3

#ifndef memory_5fmanager_2eproto_2epb_2eh
#define memory_5fmanager_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_memory_5fmanager_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_memory_5fmanager_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_memory_5fmanager_2eproto;
namespace memorymanager {
class CreateRequest;
struct CreateRequestDefaultTypeInternal;
extern CreateRequestDefaultTypeInternal _CreateRequest_default_instance_;
class CreateResponse;
struct CreateResponseDefaultTypeInternal;
extern CreateResponseDefaultTypeInternal _CreateResponse_default_instance_;
class GetRequest;
struct GetRequestDefaultTypeInternal;
extern GetRequestDefaultTypeInternal _GetRequest_default_instance_;
class GetResponse;
struct GetResponseDefaultTypeInternal;
extern GetResponseDefaultTypeInternal _GetResponse_default_instance_;
class RefCountRequest;
struct RefCountRequestDefaultTypeInternal;
extern RefCountRequestDefaultTypeInternal _RefCountRequest_default_instance_;
class RefCountResponse;
struct RefCountResponseDefaultTypeInternal;
extern RefCountResponseDefaultTypeInternal _RefCountResponse_default_instance_;
class SetRequest;
struct SetRequestDefaultTypeInternal;
extern SetRequestDefaultTypeInternal _SetRequest_default_instance_;
class SetResponse;
struct SetResponseDefaultTypeInternal;
extern SetResponseDefaultTypeInternal _SetResponse_default_instance_;
}  // namespace memorymanager
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace memorymanager {
enum DataType : int {
  INT = 0,
  FLOAT = 1,
  CHAR = 2,
  STRING = 3,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DataType_IsValid(int value);
extern const uint32_t DataType_internal_data_[];
constexpr DataType DataType_MIN = static_cast<DataType>(0);
constexpr DataType DataType_MAX = static_cast<DataType>(3);
constexpr int DataType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
DataType_descriptor();
template <typename T>
const std::string& DataType_Name(T value) {
  static_assert(std::is_same<T, DataType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DataType_Name().");
  return DataType_Name(static_cast<DataType>(value));
}
template <>
inline const std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DataType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool DataType_Parse(absl::string_view name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
      DataType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:memorymanager.SetResponse) */ {
 public:
  inline SetResponse() : SetResponse(nullptr) {}
  ~SetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetResponse(const SetResponse& from) : SetResponse(nullptr, from) {}
  inline SetResponse(SetResponse&& from) noexcept
      : SetResponse(nullptr, std::move(from)) {}
  inline SetResponse& operator=(const SetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetResponse& operator=(SetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetResponse* internal_default_instance() {
    return reinterpret_cast<const SetResponse*>(
        &_SetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SetResponse& a, SetResponse& b) { a.Swap(&b); }
  inline void Swap(SetResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetResponse& from) { SetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "memorymanager.SetResponse"; }

 protected:
  explicit SetResponse(::google::protobuf::Arena* arena);
  SetResponse(::google::protobuf::Arena* arena, const SetResponse& from);
  SetResponse(::google::protobuf::Arena* arena, SetResponse&& from) noexcept
      : SetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
    kBytesWrittenFieldNumber = 3,
  };
  // string error_message = 2;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // uint32 bytes_written = 3;
  void clear_bytes_written() ;
  ::uint32_t bytes_written() const;
  void set_bytes_written(::uint32_t value);

  private:
  ::uint32_t _internal_bytes_written() const;
  void _internal_set_bytes_written(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:memorymanager.SetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    bool success_;
    ::uint32_t bytes_written_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_memory_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class SetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:memorymanager.SetRequest) */ {
 public:
  inline SetRequest() : SetRequest(nullptr) {}
  ~SetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetRequest(const SetRequest& from) : SetRequest(nullptr, from) {}
  inline SetRequest(SetRequest&& from) noexcept
      : SetRequest(nullptr, std::move(from)) {}
  inline SetRequest& operator=(const SetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRequest& operator=(SetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRequest& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kBinaryData = 3,
    kStrData = 4,
    VALUE_NOT_SET = 0,
  };
  static inline const SetRequest* internal_default_instance() {
    return reinterpret_cast<const SetRequest*>(
        &_SetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SetRequest& a, SetRequest& b) { a.Swap(&b); }
  inline void Swap(SetRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetRequest& from) { SetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "memorymanager.SetRequest"; }

 protected:
  explicit SetRequest(::google::protobuf::Arena* arena);
  SetRequest(::google::protobuf::Arena* arena, const SetRequest& from);
  SetRequest(::google::protobuf::Arena* arena, SetRequest&& from) noexcept
      : SetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kBinaryDataFieldNumber = 3,
    kStrDataFieldNumber = 4,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .memorymanager.DataType type = 2;
  void clear_type() ;
  ::memorymanager::DataType type() const;
  void set_type(::memorymanager::DataType value);

  private:
  ::memorymanager::DataType _internal_type() const;
  void _internal_set_type(::memorymanager::DataType value);

  public:
  // bytes binary_data = 3;
  bool has_binary_data() const;
  void clear_binary_data() ;
  const std::string& binary_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_binary_data(Arg_&& arg, Args_... args);
  std::string* mutable_binary_data();
  PROTOBUF_NODISCARD std::string* release_binary_data();
  void set_allocated_binary_data(std::string* value);

  private:
  const std::string& _internal_binary_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_binary_data(
      const std::string& value);
  std::string* _internal_mutable_binary_data();

  public:
  // string str_data = 4;
  bool has_str_data() const;
  void clear_str_data() ;
  const std::string& str_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_str_data(Arg_&& arg, Args_... args);
  std::string* mutable_str_data();
  PROTOBUF_NODISCARD std::string* release_str_data();
  void set_allocated_str_data(std::string* value);

  private:
  const std::string& _internal_str_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str_data(
      const std::string& value);
  std::string* _internal_mutable_str_data();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:memorymanager.SetRequest)
 private:
  class _Internal;
  void set_has_binary_data();
  void set_has_str_data();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 4, 0,
      41, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetRequest& from_msg);
    ::int32_t id_;
    int type_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr binary_data_;
      ::google::protobuf::internal::ArenaStringPtr str_data_;
    } value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_memory_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class RefCountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:memorymanager.RefCountResponse) */ {
 public:
  inline RefCountResponse() : RefCountResponse(nullptr) {}
  ~RefCountResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RefCountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RefCountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RefCountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RefCountResponse(const RefCountResponse& from) : RefCountResponse(nullptr, from) {}
  inline RefCountResponse(RefCountResponse&& from) noexcept
      : RefCountResponse(nullptr, std::move(from)) {}
  inline RefCountResponse& operator=(const RefCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RefCountResponse& operator=(RefCountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RefCountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RefCountResponse* internal_default_instance() {
    return reinterpret_cast<const RefCountResponse*>(
        &_RefCountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(RefCountResponse& a, RefCountResponse& b) { a.Swap(&b); }
  inline void Swap(RefCountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RefCountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RefCountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RefCountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RefCountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RefCountResponse& from) { RefCountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RefCountResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "memorymanager.RefCountResponse"; }

 protected:
  explicit RefCountResponse(::google::protobuf::Arena* arena);
  RefCountResponse(::google::protobuf::Arena* arena, const RefCountResponse& from);
  RefCountResponse(::google::protobuf::Arena* arena, RefCountResponse&& from) noexcept
      : RefCountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRefCountFieldNumber = 1,
  };
  // int32 ref_count = 1;
  void clear_ref_count() ;
  ::int32_t ref_count() const;
  void set_ref_count(::int32_t value);

  private:
  ::int32_t _internal_ref_count() const;
  void _internal_set_ref_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:memorymanager.RefCountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RefCountResponse& from_msg);
    ::int32_t ref_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_memory_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class RefCountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:memorymanager.RefCountRequest) */ {
 public:
  inline RefCountRequest() : RefCountRequest(nullptr) {}
  ~RefCountRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RefCountRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RefCountRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RefCountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RefCountRequest(const RefCountRequest& from) : RefCountRequest(nullptr, from) {}
  inline RefCountRequest(RefCountRequest&& from) noexcept
      : RefCountRequest(nullptr, std::move(from)) {}
  inline RefCountRequest& operator=(const RefCountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RefCountRequest& operator=(RefCountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RefCountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RefCountRequest* internal_default_instance() {
    return reinterpret_cast<const RefCountRequest*>(
        &_RefCountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RefCountRequest& a, RefCountRequest& b) { a.Swap(&b); }
  inline void Swap(RefCountRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RefCountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RefCountRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RefCountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RefCountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RefCountRequest& from) { RefCountRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RefCountRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "memorymanager.RefCountRequest"; }

 protected:
  explicit RefCountRequest(::google::protobuf::Arena* arena);
  RefCountRequest(::google::protobuf::Arena* arena, const RefCountRequest& from);
  RefCountRequest(::google::protobuf::Arena* arena, RefCountRequest&& from) noexcept
      : RefCountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:memorymanager.RefCountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RefCountRequest& from_msg);
    ::int32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_memory_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class GetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:memorymanager.GetResponse) */ {
 public:
  inline GetResponse() : GetResponse(nullptr) {}
  ~GetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetResponse(const GetResponse& from) : GetResponse(nullptr, from) {}
  inline GetResponse(GetResponse&& from) noexcept
      : GetResponse(nullptr, std::move(from)) {}
  inline GetResponse& operator=(const GetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetResponse& operator=(GetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kBinaryData = 2,
    kStrData = 3,
    VALUE_NOT_SET = 0,
  };
  static inline const GetResponse* internal_default_instance() {
    return reinterpret_cast<const GetResponse*>(
        &_GetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetResponse& a, GetResponse& b) { a.Swap(&b); }
  inline void Swap(GetResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetResponse& from) { GetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "memorymanager.GetResponse"; }

 protected:
  explicit GetResponse(::google::protobuf::Arena* arena);
  GetResponse(::google::protobuf::Arena* arena, const GetResponse& from);
  GetResponse(::google::protobuf::Arena* arena, GetResponse&& from) noexcept
      : GetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kBinaryDataFieldNumber = 2,
    kStrDataFieldNumber = 3,
  };
  // .memorymanager.DataType type = 1;
  void clear_type() ;
  ::memorymanager::DataType type() const;
  void set_type(::memorymanager::DataType value);

  private:
  ::memorymanager::DataType _internal_type() const;
  void _internal_set_type(::memorymanager::DataType value);

  public:
  // bytes binary_data = 2;
  bool has_binary_data() const;
  void clear_binary_data() ;
  const std::string& binary_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_binary_data(Arg_&& arg, Args_... args);
  std::string* mutable_binary_data();
  PROTOBUF_NODISCARD std::string* release_binary_data();
  void set_allocated_binary_data(std::string* value);

  private:
  const std::string& _internal_binary_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_binary_data(
      const std::string& value);
  std::string* _internal_mutable_binary_data();

  public:
  // string str_data = 3;
  bool has_str_data() const;
  void clear_str_data() ;
  const std::string& str_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_str_data(Arg_&& arg, Args_... args);
  std::string* mutable_str_data();
  PROTOBUF_NODISCARD std::string* release_str_data();
  void set_allocated_str_data(std::string* value);

  private:
  const std::string& _internal_str_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str_data(
      const std::string& value);
  std::string* _internal_mutable_str_data();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:memorymanager.GetResponse)
 private:
  class _Internal;
  void set_has_binary_data();
  void set_has_str_data();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetResponse& from_msg);
    int type_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr binary_data_;
      ::google::protobuf::internal::ArenaStringPtr str_data_;
    } value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_memory_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class GetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:memorymanager.GetRequest) */ {
 public:
  inline GetRequest() : GetRequest(nullptr) {}
  ~GetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRequest(const GetRequest& from) : GetRequest(nullptr, from) {}
  inline GetRequest(GetRequest&& from) noexcept
      : GetRequest(nullptr, std::move(from)) {}
  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRequest& operator=(GetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRequest* internal_default_instance() {
    return reinterpret_cast<const GetRequest*>(
        &_GetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetRequest& a, GetRequest& b) { a.Swap(&b); }
  inline void Swap(GetRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRequest& from) { GetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "memorymanager.GetRequest"; }

 protected:
  explicit GetRequest(::google::protobuf::Arena* arena);
  GetRequest(::google::protobuf::Arena* arena, const GetRequest& from);
  GetRequest(::google::protobuf::Arena* arena, GetRequest&& from) noexcept
      : GetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kExpectedTypeFieldNumber = 2,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .memorymanager.DataType expected_type = 2;
  void clear_expected_type() ;
  ::memorymanager::DataType expected_type() const;
  void set_expected_type(::memorymanager::DataType value);

  private:
  ::memorymanager::DataType _internal_expected_type() const;
  void _internal_set_expected_type(::memorymanager::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:memorymanager.GetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRequest& from_msg);
    ::int32_t id_;
    int expected_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_memory_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class CreateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:memorymanager.CreateResponse) */ {
 public:
  inline CreateResponse() : CreateResponse(nullptr) {}
  ~CreateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateResponse(const CreateResponse& from) : CreateResponse(nullptr, from) {}
  inline CreateResponse(CreateResponse&& from) noexcept
      : CreateResponse(nullptr, std::move(from)) {}
  inline CreateResponse& operator=(const CreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateResponse& operator=(CreateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateResponse* internal_default_instance() {
    return reinterpret_cast<const CreateResponse*>(
        &_CreateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CreateResponse& a, CreateResponse& b) { a.Swap(&b); }
  inline void Swap(CreateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateResponse& from) { CreateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "memorymanager.CreateResponse"; }

 protected:
  explicit CreateResponse(::google::protobuf::Arena* arena);
  CreateResponse(::google::protobuf::Arena* arena, const CreateResponse& from);
  CreateResponse(::google::protobuf::Arena* arena, CreateResponse&& from) noexcept
      : CreateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kActualSizeFieldNumber = 3,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .memorymanager.DataType type = 2;
  void clear_type() ;
  ::memorymanager::DataType type() const;
  void set_type(::memorymanager::DataType value);

  private:
  ::memorymanager::DataType _internal_type() const;
  void _internal_set_type(::memorymanager::DataType value);

  public:
  // uint32 actual_size = 3;
  void clear_actual_size() ;
  ::uint32_t actual_size() const;
  void set_actual_size(::uint32_t value);

  private:
  ::uint32_t _internal_actual_size() const;
  void _internal_set_actual_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:memorymanager.CreateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateResponse& from_msg);
    ::int32_t id_;
    int type_;
    ::uint32_t actual_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_memory_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class CreateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:memorymanager.CreateRequest) */ {
 public:
  inline CreateRequest() : CreateRequest(nullptr) {}
  ~CreateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateRequest(const CreateRequest& from) : CreateRequest(nullptr, from) {}
  inline CreateRequest(CreateRequest&& from) noexcept
      : CreateRequest(nullptr, std::move(from)) {}
  inline CreateRequest& operator=(const CreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateRequest& operator=(CreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateRequest* internal_default_instance() {
    return reinterpret_cast<const CreateRequest*>(
        &_CreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CreateRequest& a, CreateRequest& b) { a.Swap(&b); }
  inline void Swap(CreateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateRequest& from) { CreateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "memorymanager.CreateRequest"; }

 protected:
  explicit CreateRequest(::google::protobuf::Arena* arena);
  CreateRequest(::google::protobuf::Arena* arena, const CreateRequest& from);
  CreateRequest(::google::protobuf::Arena* arena, CreateRequest&& from) noexcept
      : CreateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // .memorymanager.DataType type = 1;
  void clear_type() ;
  ::memorymanager::DataType type() const;
  void set_type(::memorymanager::DataType value);

  private:
  ::memorymanager::DataType _internal_type() const;
  void _internal_set_type(::memorymanager::DataType value);

  public:
  // uint32 size = 2;
  void clear_size() ;
  ::uint32_t size() const;
  void set_size(::uint32_t value);

  private:
  ::uint32_t _internal_size() const;
  void _internal_set_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:memorymanager.CreateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateRequest& from_msg);
    int type_;
    ::uint32_t size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_memory_5fmanager_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateRequest

// .memorymanager.DataType type = 1;
inline void CreateRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::memorymanager::DataType CreateRequest::type() const {
  // @@protoc_insertion_point(field_get:memorymanager.CreateRequest.type)
  return _internal_type();
}
inline void CreateRequest::set_type(::memorymanager::DataType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:memorymanager.CreateRequest.type)
}
inline ::memorymanager::DataType CreateRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::memorymanager::DataType>(_impl_.type_);
}
inline void CreateRequest::_internal_set_type(::memorymanager::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// uint32 size = 2;
inline void CreateRequest::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = 0u;
}
inline ::uint32_t CreateRequest::size() const {
  // @@protoc_insertion_point(field_get:memorymanager.CreateRequest.size)
  return _internal_size();
}
inline void CreateRequest::set_size(::uint32_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:memorymanager.CreateRequest.size)
}
inline ::uint32_t CreateRequest::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_;
}
inline void CreateRequest::_internal_set_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = value;
}

// -------------------------------------------------------------------

// CreateResponse

// int32 id = 1;
inline void CreateResponse::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t CreateResponse::id() const {
  // @@protoc_insertion_point(field_get:memorymanager.CreateResponse.id)
  return _internal_id();
}
inline void CreateResponse::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:memorymanager.CreateResponse.id)
}
inline ::int32_t CreateResponse::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void CreateResponse::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .memorymanager.DataType type = 2;
inline void CreateResponse::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::memorymanager::DataType CreateResponse::type() const {
  // @@protoc_insertion_point(field_get:memorymanager.CreateResponse.type)
  return _internal_type();
}
inline void CreateResponse::set_type(::memorymanager::DataType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:memorymanager.CreateResponse.type)
}
inline ::memorymanager::DataType CreateResponse::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::memorymanager::DataType>(_impl_.type_);
}
inline void CreateResponse::_internal_set_type(::memorymanager::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// uint32 actual_size = 3;
inline void CreateResponse::clear_actual_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actual_size_ = 0u;
}
inline ::uint32_t CreateResponse::actual_size() const {
  // @@protoc_insertion_point(field_get:memorymanager.CreateResponse.actual_size)
  return _internal_actual_size();
}
inline void CreateResponse::set_actual_size(::uint32_t value) {
  _internal_set_actual_size(value);
  // @@protoc_insertion_point(field_set:memorymanager.CreateResponse.actual_size)
}
inline ::uint32_t CreateResponse::_internal_actual_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.actual_size_;
}
inline void CreateResponse::_internal_set_actual_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actual_size_ = value;
}

// -------------------------------------------------------------------

// SetRequest

// int32 id = 1;
inline void SetRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t SetRequest::id() const {
  // @@protoc_insertion_point(field_get:memorymanager.SetRequest.id)
  return _internal_id();
}
inline void SetRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:memorymanager.SetRequest.id)
}
inline ::int32_t SetRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void SetRequest::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .memorymanager.DataType type = 2;
inline void SetRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::memorymanager::DataType SetRequest::type() const {
  // @@protoc_insertion_point(field_get:memorymanager.SetRequest.type)
  return _internal_type();
}
inline void SetRequest::set_type(::memorymanager::DataType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:memorymanager.SetRequest.type)
}
inline ::memorymanager::DataType SetRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::memorymanager::DataType>(_impl_.type_);
}
inline void SetRequest::_internal_set_type(::memorymanager::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// bytes binary_data = 3;
inline bool SetRequest::has_binary_data() const {
  return value_case() == kBinaryData;
}
inline void SetRequest::set_has_binary_data() {
  _impl_._oneof_case_[0] = kBinaryData;
}
inline void SetRequest::clear_binary_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kBinaryData) {
    _impl_.value_.binary_data_.Destroy();
    clear_has_value();
  }
}
inline const std::string& SetRequest::binary_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:memorymanager.SetRequest.binary_data)
  return _internal_binary_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetRequest::set_binary_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinaryData) {
    clear_value();

    set_has_binary_data();
    _impl_.value_.binary_data_.InitDefault();
  }
  _impl_.value_.binary_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:memorymanager.SetRequest.binary_data)
}
inline std::string* SetRequest::mutable_binary_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_binary_data();
  // @@protoc_insertion_point(field_mutable:memorymanager.SetRequest.binary_data)
  return _s;
}
inline const std::string& SetRequest::_internal_binary_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kBinaryData) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.binary_data_.Get();
}
inline void SetRequest::_internal_set_binary_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinaryData) {
    clear_value();

    set_has_binary_data();
    _impl_.value_.binary_data_.InitDefault();
  }
  _impl_.value_.binary_data_.Set(value, GetArena());
}
inline std::string* SetRequest::_internal_mutable_binary_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinaryData) {
    clear_value();

    set_has_binary_data();
    _impl_.value_.binary_data_.InitDefault();
  }
  return _impl_.value_.binary_data_.Mutable( GetArena());
}
inline std::string* SetRequest::release_binary_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:memorymanager.SetRequest.binary_data)
  if (value_case() != kBinaryData) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.binary_data_.Release();
}
inline void SetRequest::set_allocated_binary_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_binary_data();
    _impl_.value_.binary_data_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:memorymanager.SetRequest.binary_data)
}

// string str_data = 4;
inline bool SetRequest::has_str_data() const {
  return value_case() == kStrData;
}
inline void SetRequest::set_has_str_data() {
  _impl_._oneof_case_[0] = kStrData;
}
inline void SetRequest::clear_str_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kStrData) {
    _impl_.value_.str_data_.Destroy();
    clear_has_value();
  }
}
inline const std::string& SetRequest::str_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:memorymanager.SetRequest.str_data)
  return _internal_str_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetRequest::set_str_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrData) {
    clear_value();

    set_has_str_data();
    _impl_.value_.str_data_.InitDefault();
  }
  _impl_.value_.str_data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:memorymanager.SetRequest.str_data)
}
inline std::string* SetRequest::mutable_str_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_str_data();
  // @@protoc_insertion_point(field_mutable:memorymanager.SetRequest.str_data)
  return _s;
}
inline const std::string& SetRequest::_internal_str_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kStrData) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.str_data_.Get();
}
inline void SetRequest::_internal_set_str_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrData) {
    clear_value();

    set_has_str_data();
    _impl_.value_.str_data_.InitDefault();
  }
  _impl_.value_.str_data_.Set(value, GetArena());
}
inline std::string* SetRequest::_internal_mutable_str_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrData) {
    clear_value();

    set_has_str_data();
    _impl_.value_.str_data_.InitDefault();
  }
  return _impl_.value_.str_data_.Mutable( GetArena());
}
inline std::string* SetRequest::release_str_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:memorymanager.SetRequest.str_data)
  if (value_case() != kStrData) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.str_data_.Release();
}
inline void SetRequest::set_allocated_str_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_str_data();
    _impl_.value_.str_data_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:memorymanager.SetRequest.str_data)
}

inline bool SetRequest::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void SetRequest::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline SetRequest::ValueCase SetRequest::value_case() const {
  return SetRequest::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// SetResponse

// bool success = 1;
inline void SetResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool SetResponse::success() const {
  // @@protoc_insertion_point(field_get:memorymanager.SetResponse.success)
  return _internal_success();
}
inline void SetResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:memorymanager.SetResponse.success)
}
inline bool SetResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void SetResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string error_message = 2;
inline void SetResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& SetResponse::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:memorymanager.SetResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetResponse::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:memorymanager.SetResponse.error_message)
}
inline std::string* SetResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:memorymanager.SetResponse.error_message)
  return _s;
}
inline const std::string& SetResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void SetResponse::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* SetResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* SetResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:memorymanager.SetResponse.error_message)
  return _impl_.error_message_.Release();
}
inline void SetResponse::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:memorymanager.SetResponse.error_message)
}

// uint32 bytes_written = 3;
inline void SetResponse::clear_bytes_written() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_written_ = 0u;
}
inline ::uint32_t SetResponse::bytes_written() const {
  // @@protoc_insertion_point(field_get:memorymanager.SetResponse.bytes_written)
  return _internal_bytes_written();
}
inline void SetResponse::set_bytes_written(::uint32_t value) {
  _internal_set_bytes_written(value);
  // @@protoc_insertion_point(field_set:memorymanager.SetResponse.bytes_written)
}
inline ::uint32_t SetResponse::_internal_bytes_written() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_written_;
}
inline void SetResponse::_internal_set_bytes_written(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_written_ = value;
}

// -------------------------------------------------------------------

// GetRequest

// int32 id = 1;
inline void GetRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t GetRequest::id() const {
  // @@protoc_insertion_point(field_get:memorymanager.GetRequest.id)
  return _internal_id();
}
inline void GetRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:memorymanager.GetRequest.id)
}
inline ::int32_t GetRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetRequest::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .memorymanager.DataType expected_type = 2;
inline void GetRequest::clear_expected_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expected_type_ = 0;
}
inline ::memorymanager::DataType GetRequest::expected_type() const {
  // @@protoc_insertion_point(field_get:memorymanager.GetRequest.expected_type)
  return _internal_expected_type();
}
inline void GetRequest::set_expected_type(::memorymanager::DataType value) {
  _internal_set_expected_type(value);
  // @@protoc_insertion_point(field_set:memorymanager.GetRequest.expected_type)
}
inline ::memorymanager::DataType GetRequest::_internal_expected_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::memorymanager::DataType>(_impl_.expected_type_);
}
inline void GetRequest::_internal_set_expected_type(::memorymanager::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expected_type_ = value;
}

// -------------------------------------------------------------------

// GetResponse

// .memorymanager.DataType type = 1;
inline void GetResponse::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::memorymanager::DataType GetResponse::type() const {
  // @@protoc_insertion_point(field_get:memorymanager.GetResponse.type)
  return _internal_type();
}
inline void GetResponse::set_type(::memorymanager::DataType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:memorymanager.GetResponse.type)
}
inline ::memorymanager::DataType GetResponse::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::memorymanager::DataType>(_impl_.type_);
}
inline void GetResponse::_internal_set_type(::memorymanager::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// bytes binary_data = 2;
inline bool GetResponse::has_binary_data() const {
  return value_case() == kBinaryData;
}
inline void GetResponse::set_has_binary_data() {
  _impl_._oneof_case_[0] = kBinaryData;
}
inline void GetResponse::clear_binary_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kBinaryData) {
    _impl_.value_.binary_data_.Destroy();
    clear_has_value();
  }
}
inline const std::string& GetResponse::binary_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:memorymanager.GetResponse.binary_data)
  return _internal_binary_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetResponse::set_binary_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinaryData) {
    clear_value();

    set_has_binary_data();
    _impl_.value_.binary_data_.InitDefault();
  }
  _impl_.value_.binary_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:memorymanager.GetResponse.binary_data)
}
inline std::string* GetResponse::mutable_binary_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_binary_data();
  // @@protoc_insertion_point(field_mutable:memorymanager.GetResponse.binary_data)
  return _s;
}
inline const std::string& GetResponse::_internal_binary_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kBinaryData) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.binary_data_.Get();
}
inline void GetResponse::_internal_set_binary_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinaryData) {
    clear_value();

    set_has_binary_data();
    _impl_.value_.binary_data_.InitDefault();
  }
  _impl_.value_.binary_data_.Set(value, GetArena());
}
inline std::string* GetResponse::_internal_mutable_binary_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinaryData) {
    clear_value();

    set_has_binary_data();
    _impl_.value_.binary_data_.InitDefault();
  }
  return _impl_.value_.binary_data_.Mutable( GetArena());
}
inline std::string* GetResponse::release_binary_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:memorymanager.GetResponse.binary_data)
  if (value_case() != kBinaryData) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.binary_data_.Release();
}
inline void GetResponse::set_allocated_binary_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_binary_data();
    _impl_.value_.binary_data_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:memorymanager.GetResponse.binary_data)
}

// string str_data = 3;
inline bool GetResponse::has_str_data() const {
  return value_case() == kStrData;
}
inline void GetResponse::set_has_str_data() {
  _impl_._oneof_case_[0] = kStrData;
}
inline void GetResponse::clear_str_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kStrData) {
    _impl_.value_.str_data_.Destroy();
    clear_has_value();
  }
}
inline const std::string& GetResponse::str_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:memorymanager.GetResponse.str_data)
  return _internal_str_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetResponse::set_str_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrData) {
    clear_value();

    set_has_str_data();
    _impl_.value_.str_data_.InitDefault();
  }
  _impl_.value_.str_data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:memorymanager.GetResponse.str_data)
}
inline std::string* GetResponse::mutable_str_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_str_data();
  // @@protoc_insertion_point(field_mutable:memorymanager.GetResponse.str_data)
  return _s;
}
inline const std::string& GetResponse::_internal_str_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kStrData) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.str_data_.Get();
}
inline void GetResponse::_internal_set_str_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrData) {
    clear_value();

    set_has_str_data();
    _impl_.value_.str_data_.InitDefault();
  }
  _impl_.value_.str_data_.Set(value, GetArena());
}
inline std::string* GetResponse::_internal_mutable_str_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrData) {
    clear_value();

    set_has_str_data();
    _impl_.value_.str_data_.InitDefault();
  }
  return _impl_.value_.str_data_.Mutable( GetArena());
}
inline std::string* GetResponse::release_str_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:memorymanager.GetResponse.str_data)
  if (value_case() != kStrData) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.str_data_.Release();
}
inline void GetResponse::set_allocated_str_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_str_data();
    _impl_.value_.str_data_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:memorymanager.GetResponse.str_data)
}

inline bool GetResponse::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void GetResponse::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline GetResponse::ValueCase GetResponse::value_case() const {
  return GetResponse::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RefCountRequest

// int32 id = 1;
inline void RefCountRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t RefCountRequest::id() const {
  // @@protoc_insertion_point(field_get:memorymanager.RefCountRequest.id)
  return _internal_id();
}
inline void RefCountRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:memorymanager.RefCountRequest.id)
}
inline ::int32_t RefCountRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void RefCountRequest::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// RefCountResponse

// int32 ref_count = 1;
inline void RefCountResponse::clear_ref_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ref_count_ = 0;
}
inline ::int32_t RefCountResponse::ref_count() const {
  // @@protoc_insertion_point(field_get:memorymanager.RefCountResponse.ref_count)
  return _internal_ref_count();
}
inline void RefCountResponse::set_ref_count(::int32_t value) {
  _internal_set_ref_count(value);
  // @@protoc_insertion_point(field_set:memorymanager.RefCountResponse.ref_count)
}
inline ::int32_t RefCountResponse::_internal_ref_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ref_count_;
}
inline void RefCountResponse::_internal_set_ref_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ref_count_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace memorymanager


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::memorymanager::DataType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::memorymanager::DataType>() {
  return ::memorymanager::DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // memory_5fmanager_2eproto_2epb_2eh
